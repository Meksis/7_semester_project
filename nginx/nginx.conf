events {}

http {
    server {
        listen 443 ssl;
        server_name localhost;

        # SSL сертификаты
        ssl_certificate /etc/ssl/cert.pem;
        ssl_certificate_key /etc/ssl/key.pem;

        # Прокси на Flask сервер (для всех других запросов, кроме /api/chat)
        location / {
            proxy_pass https://host.docker.internal:5000;  # Прокси на сервер Flask (https)
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;

            # Заголовки для разрешения CORS
            add_header Access-Control-Allow-Methods 'GET, POST, OPTIONS';
            add_header Access-Control-Allow-Headers 'Content-Type';
            add_header Access-Control-Allow-Origin *;  # Разрешить доступ с фронтенда
        }

        # Прокси на /api/chat запросы на сервер Ollama (HTTP)
        location /api/chat {
            # proxy_pass http://ollama:11434/api/chat;  # Прокси на контейнер Ollama (http)
            proxy_pass http://ollama:11434;

            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;

            # Заголовки для разрешения CORS
            add_header Access-Control-Allow-Methods 'GET, POST, OPTIONS';
            add_header Access-Control-Allow-Headers 'Content-Type';
            add_header Access-Control-Allow-Origin *;  # Разрешить доступ с фронтенда
        }

    }

    # Редирект с HTTP на HTTPS (если требуется)
    server {
        listen 80;
        server_name localhost_;

        return 301 https://$host$request_uri;  # Редирект с HTTP на HTTPS
    }
}
